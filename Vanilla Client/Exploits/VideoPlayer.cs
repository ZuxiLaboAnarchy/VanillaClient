using VRC.SDK3.Components;
using VRC.SDKBase;
using VRCSDK2;

namespace Vanilla.Exploits
{
    internal class VideoPlayers
    {
        internal bool OverrideVideoPlayers(string url)
        {
            var value = url.Trim();
            if (string.IsNullOrEmpty(value))
            {
                Log("Video Player", "Can't override video players (URL is null)");
                return false;
            }

            foreach (var item in UnityEngine.Object.FindObjectsOfType<SyncVideoPlayer>())
            {
                if (item != null)
                {
                    Networking.LocalPlayer.TakeOwnership(item.gameObject);
                    var field_Private_VRC_SyncVideoPlayer_ = item.field_Private_VRC_SyncVideoPlayer_0;
                    field_Private_VRC_SyncVideoPlayer_.Stop();
                    field_Private_VRC_SyncVideoPlayer_.Clear();
                    field_Private_VRC_SyncVideoPlayer_.AddURL(url);
                    field_Private_VRC_SyncVideoPlayer_.Next();
                    field_Private_VRC_SyncVideoPlayer_.Play();
                }
            }

            foreach (var item2 in UnityEngine.Object.FindObjectsOfType<SyncVideoStream>())
            {
                if (item2 != null)
                {
                    Networking.LocalPlayer.TakeOwnership(item2.gameObject);
                    var field_Private_VRC_SyncVideoStream_ = item2.field_Private_VRC_SyncVideoStream_0;
                    field_Private_VRC_SyncVideoStream_.Stop();
                    field_Private_VRC_SyncVideoStream_.Clear();
                    field_Private_VRC_SyncVideoStream_.AddURL(url);
                    field_Private_VRC_SyncVideoStream_.Next();
                    field_Private_VRC_SyncVideoStream_.Play();
                }
            }

            foreach (var item3 in UnityEngine.Object.FindObjectsOfType<VRCUrlInputField>())
            {
                if (item3 != null)
                {
                    item3.text = url;
                    item3.onEndEdit.Invoke(url);
                }
            }

            return true;
        }
    }
}