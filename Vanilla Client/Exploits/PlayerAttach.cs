// /*
//  *
//  * VanillaClient - PlayerAttach.cs
//  * Copyright 2023 - 2024 Zuxi and contributors
//  *
//  */

using System.Collections;
using UnityEngine;
using Vanilla.Modules.Manager;

namespace Vanilla.Exploits
{
    internal class PlayerAttach : VanillaModule
    {
        protected override string ModuleName => "Player Attach";
        internal static bool _IsSiting = false;
        internal static int _Part = 0;
        internal static VRCPlayer _TargetedVRCPlayer = null;

        internal static void togglecontroller(bool onoroff)
        {
            VRC.Player.prop_Player_0.gameObject.GetComponent<CharacterController>().enabled = onoroff;
        }

        //internal static Thread threadsit = new Thread(sitonparts);
        internal static IEnumerator _Sitonparts()
        {
            if (_TargetedVRCPlayer == null)
            {
                yield break;
            }


            togglecontroller(!_IsSiting);
            switch (_Part)
            {
                case 0:
                    //Head
                    while (_IsSiting)
                    {
                        VRC.Player.prop_Player_0.transform.position = _TargetedVRCPlayer.field_Internal_Animator_0
                            .GetBoneTransform(HumanBodyBones.Head).position;
                        yield return null;
                    }

                    break;
                case 1:
                    //Right Hand
                    while (_IsSiting)
                    {
                        VRC.Player.prop_Player_0.transform.position = _TargetedVRCPlayer.field_Internal_Animator_0
                            .GetBoneTransform(HumanBodyBones.RightIndexProximal).position;
                        yield return null;
                    }

                    break;
                case 2:
                    //Left Hand
                    while (_IsSiting)
                    {
                        VRC.Player.prop_Player_0.transform.position = _TargetedVRCPlayer.field_Internal_Animator_0
                            .GetBoneTransform(HumanBodyBones.LeftIndexProximal).position;
                        yield return null;
                    }

                    break;
                case 3:
                    //Right Shoulder
                    while (_IsSiting)
                    {
                        VRC.Player.prop_Player_0.transform.position = _TargetedVRCPlayer.field_Internal_Animator_0
                            .GetBoneTransform(HumanBodyBones.RightShoulder).position;
                        yield return null;
                    }

                    break;
                case 4:
                    while (_IsSiting)
                    {
                        VRC.Player.prop_Player_0.transform.position = _TargetedVRCPlayer.field_Internal_Animator_0
                            .GetBoneTransform(HumanBodyBones.LeftFoot).position;
                        yield return null;
                    }

                    break;
            }

            yield return null;
        }
    }
}
